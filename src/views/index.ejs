<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title> Chatbot </title>
    <meta name="viewport" content="width=device-width,initial-scale= 1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="./css/style.css">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
</head>
<body>
    <button class="chatbot-toggler">
        <span class="material-symbols-outlined">mode_comment</span>
        <span class="material-symbols-outlined">close</span>
    </button>
    <div class="chatbot">
        <header>
            <div class="close_x">X</div>
            <h2>Chatbot</h2>
        </header>
        <ul class="chatbox">
            <li class="chat incoming">
                <img src="./img/logo.png" class="material-symbols-outlined logo-img">
                <p> Hi there <br> how can i help you today?</p>
            </li>
            <li class="chat outgoing">
            </li>
        </ul>
        <div class="chat-input">
            <textarea placeholder="Enter a message...." required>
            </textarea>
            <span id="send-btn" class="material-symbols-outlined">
                send
                </span>
        </div>
    </div>
</body>
<script>
    document.querySelector('.chatbot-toggler').addEventListener('click', function() {
        document.body.classList.toggle('show-chatbot');
    });
    const chatInput = document.querySelector(".chat-input textarea");
    const sendChatBtn = document.querySelector(".chat-input span");
    const chatbox = document.querySelector(".chatbox");
    let userMessage;
    const API_KEY = "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";
    const  createChatLi = (message,className) =>{
        // create a chat li element with pased mess
        const chatLi = document.createElement("li");
        chatLi.classList.add("chat",className);
        let chatContent = className ==="outgoing"? `<p>${message}</p>` : ` <img src="./img/logo.png" class="material-symbols-outlined logo-img"><p>${message}</p>`
        chatLi.innerHTML = chatContent;
        return chatLi;
    }

    const generateResponse = (incomingChatLi) => {
        const API_URL = "https://api.openai.com/v1/chat/completions";
        const messageElement = incomingChatLi.querySelector("p");
        
        // Fetch the content of the "dung.txt" file
        fetch("./text/dung.txt")
            .then(response => response.text())
            .then(systemMessage => {
                const requestOptions = {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": `Bearer ${API_KEY}`
                    },
                    body: JSON.stringify({
                        model: "gpt-3.5-turbo",
                        messages: [
                            { role: "system", content: systemMessage },  // Use the content of the file as the system message
                            { role: "user", content: userMessage }
                        ]
                    })
                };
    
                fetch(API_URL, requestOptions)
                    .then(res => res.json())
                    .then(data => {
                        messageElement.textContent = data.choices[0].message.content;
                    })
                    .catch((error) => {
                        messageElement.textContent = "Oops! Something went wrong";
                    })
                    .finally(() => chatbox.scrollTo(0, chatbox.scrollHeight));
            })
            .catch(error => {
                console.error("Error reading file:", error);
            });
    };
    
    const handleChat = () => {
        userMessage = chatInput.value.trim();
        // console.log(userMessage);
        if (!userMessage) return;
    
        chatbox.appendChild(createChatLi(userMessage, "outgoing"));
        chatbox.scrollTo(0,chatbox.scrollHeight);
        setTimeout(() => {
            const incomingChatLi = createChatLi("Thinking...", "incoming");
            chatbox.appendChild(incomingChatLi);
            chatbox.scrollTo(0,chatbox.scrollHeight);
            generateResponse(incomingChatLi);
            
            // Reset the input after sending a message
            chatInput.value = "";
        }, 600);
    };
    
    sendChatBtn.addEventListener("click",handleChat);
    document.addEventListener("DOMContentLoaded", function() {
        // Find the close button element
        var closeButton = document.querySelector('.close_x');
        <!-- console.log(closeButton); -->
        // Find the chatbox element
        var chatbox = document.querySelector('.chatbox');
        // Add a click event listener to the close button
        if (closeButton && chatbox) {
            closeButton.addEventListener('click', function() {
                // Toggle the visibility of the chatbox by adding/removing the 'hidden' class
                chatbox.classList.toggle('hidden');
                console.log("đã vào");
            });
        }
    });
</script>
</html>